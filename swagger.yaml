basePath: /api
consumes:
- application/json
definitions:
  Book:
    description: Book represents the model for an book
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      UpdatedAt:
        format: date-time
        type: string
      author:
        type: string
        x-go-name: Author
      image:
        type: string
        x-go-name: Image
      isbn:
        type: string
        x-go-name: Isbn
      title:
        type: string
        x-go-name: Title
    type: object
    x-go-package: github.com/hzprog/restapi/Models/book
  DeletedAt:
    $ref: '#/definitions/NullTime'
  NullTime:
    description: |-
      NullTime implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Time:
        format: date-time
        type: string
      Valid:
        type: boolean
    title: NullTime represents a time.Time that may be null.
    type: object
    x-go-package: database/sql
host: localhost:8000
info:
  description: Documentation for Book API
  version: 1.0.0
paths:
  /books:
    get:
      operationId: getBooks
      parameters:
      - description: the book created
        in: query
        name: limit
        type: string
        x-go-name: Limit
      - in: query
        name: offset
        type: string
        x-go-name: Offset
      responses:
        "200":
          $ref: '#/responses/booksResponse'
      summary: Return all books.
      tags:
      - books
    post:
      operationId: createBook
      parameters:
      - in: formData
        name: isbn
        type: string
        x-go-name: Isbn
      - in: formData
        name: title
        type: string
        x-go-name: Title
      - in: formData
        name: author
        type: string
        x-go-name: Author
      - description: Image desc.
        in: formData
        name: image
        type: file
        x-go-name: Image
      responses:
        "200":
          $ref: '#/responses/bookResponse'
      summary: Create a book.
      tags:
      - books
  /books/{id}:
    delete:
      description: Delete a book from the database
      operationId: deleteBook
      parameters:
      - description: The ID of the book to delete from the database
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "201":
          $ref: '#/responses/noContent'
      tags:
      - books
    put:
      operationId: updateBook
      parameters:
      - description: |-
          Book data structure to Update or Create.
          Note: the id field is ignored by update and create operations
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Book'
      - description: The ID of the book to delete from the database
        format: int64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/bookResponse'
      summary: Update a book.
      tags:
      - books
  /login:
    post:
      operationId: login
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          properties:
            password:
              type: string
              x-go-name: Password
            username:
              type: string
              x-go-name: Username
          type: object
      responses:
        "200":
          $ref: '#/responses/authResponse'
      summary: login to the book api.
      security: []
      tags:
      - auth
  /signup:
    post:
      operationId: signup
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          properties:
            password:
              type: string
              x-go-name: Password
            username:
              type: string
              x-go-name: Username
          type: object
      responses:
        "200":
          $ref: '#/responses/authResponse'
      security: []
      summary: signup to the api.
      tags:
      - auth
produces:
- application/json
responses:
  authResponse:
    description: The total of books
    schema:
      properties:
        message:
          type: string
          x-go-name: Message
        token:
          type: string
          x-go-name: Token
      type: object
  bookResponse:
    description: The book created returns in the response
    schema:
      $ref: '#/definitions/Book'
  booksResponse:
    description: The total of books
    schema:
      properties:
        books:
          items:
            $ref: '#/definitions/Book'
          type: array
          x-go-name: Books
        total:
          type: string
          x-go-name: Total
      type: object
  noContent:
    description: ""
    headers:
      book deleted successfully:
        type: string
schemes:
- http
security:
- Bearer: []
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
